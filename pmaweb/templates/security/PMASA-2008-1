<html xmlns:py="http://genshi.edgewall.org/" xmlns:xi="http://www.w3.org/2001/XInclude" py:strip="">


<py:def function="announcement_id">
PMASA-2008-1
</py:def>

<py:def function="announcement_date">
2008-03-01
</py:def>

<py:def function="announcement_updated">
2008-03-03
</py:def>


<py:def function="announcement_summary">
SQL injection vulnerability (Delayed Cross Site Request Forgery)
</py:def>


<py:def function="announcement_description_fmt">
<p>
We received an advisory from Richard Cunningham, and we wish to thank him for
his work. phpMyAdmin used the $$_REQUEST superglobal as a source for its
parameters, instead of $$_GET and $$_POST superglobals. This means that on most
servers, a cookie with the same name as one of phpMyAdmin's parameters can
interfere.
</p>

<p>
Another application could set a cookie for the root path "/" with a "sql_query" name, therefore overriding the user-submitted sql_query because by default, the $$_REQUEST superglobal imports first GET, then POST then COOKIE data.
</p>
</py:def>


<py:def function="announcement_severity">
We consider this vulnerability to be serious.
</py:def>


<py:def function="announcement_mitigation">
An attacker must trick the victim into visiting a page on the same web server where he has placed code that creates a malicious cookie.
</py:def>


<py:def function="announcement_affected">
Versions before 2.11.5. 
</py:def>


<py:def function="announcement_solution">
Upgrade to phpMyAdmin 2.11.5 or newer, where $$_REQUEST is rebuilt to not contain cookies.
</py:def>

<py:def function="announcement_commits">
c57b39bed91f06d574a95d8a5a091e5e59492d69
</py:def>

<py:def function="announcement_cve">CVE-2008-1149</py:def>

<py:def function="announcement_cwe">661 89</py:def>

<xi:include href="_page.tpl" />
</html>
